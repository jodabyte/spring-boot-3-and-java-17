version: "3.9"

services:
  mongo:
    image: @docker-image-mongodb@
    container_name: mongo
    ports:
      - "27017:27017"
    networks:
      - app-tier
  asset-service:
    image: asset-service:@project.version@
    container_name: asset-service
    ports:
      - "8080:8080"
    networks:
      - app-tier
    depends_on:
      mongo:
        condition: service_started

  kafka-ui:
    image: @docker-image-kafka-ui@
    container_name: kafka-ui
    ports:
      - "8082:8080"
    depends_on:
      kafka:
        condition: service_started
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      DYNAMIC_CONFIG_ENABLED: true
    volumes:
      - kafka_ui_conf:/config.yml
    networks:
      - app-tier
  kafka:
    image: @docker-image-kafka@
    container_name: kafka
    ports:
      - "9092:9092"
      - "9094:9094"
    environment:
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
    networks:
      - app-tier
  integration-service:
    image: integration-service:@project.version@
    container_name: integration-service
    networks:
      - app-tier
    depends_on:
      - asset-service
      - kafka

volumes:
  kafka_ui_conf:

networks:
  app-tier:
    driver: bridge